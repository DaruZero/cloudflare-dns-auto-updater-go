# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  #name: repo-name

  # A short description of the repository that will show up on GitHub
  #description: description of repo

  # A URL with more information about the repository
  #homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  #topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  #private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
    - name: "type: bug"
      color: "FF0000"
      description: Something isn\'t working
    - name: "type: ci"
      color: "AB4301"
      description: CI/CD related
    - name: "type: dependency"
      color: "EDB9B9"
      description: Pull requests that update a dependency file
    - name: "type: documentation"
      color: "0075ca"
      description: Improvements or additions to documentation
    - name: "type: enhancement"
      color: "A2EEEF"
      description: New feature or request
    - name: "type: question"
      color: "D876E3"
      description: Further information is requested
    - name: "type: refactor"
      color: "FBCA04"
      description: Code refactor
    - name: "type: security"
      color: "8F2323"
      description: Security related
    - name: "type: test"
      color: "C2E0C6"
      description: Test related
    - name: "type: epic"
      color: "0E8A16"
      description: This issue is an epic
    - name: "flag: archive"
      color: "000000"
      description: "This issue is archived"
    - name: "flag: duplicate"
      color: "cccccc"
      description: "This issue or pull request already exists"
    - name: "flag: high priority"
      color: "e11d21"
      description: "This issue or pull request needs to be resolved ASAP"
    - name: "flag: invalid"
      color: "e4e669"
      description: "This issue or pull request is no longer relevant"
    - name: "flag: wontfix"
      color: "ffffff"
      description: "This will not be worked on"
    - name: "lang: docker"
      color: "0095FF"
      description: "This issue or pull request is related to Docker"
    - name: "lang: go"
      color: "00EAFF"
      description: "This issue or pull request is related to Go"
    - name: "status: blocked"
      color: "B74B00"
      description: "This issue or pull request is blocked"
    - name: "status: in progress"
      color: "194D33"
      description: "This issue or pull request is in progress"
    - name: "status: needs review"
      color: "157E49"
      description: "This issue or pull request needs review"
    - name: "status: needs testing"
      color: "608565"
      description: "This issue or pull request needs testing"
    - name: "status: on hold"
      color: "AD8600"
      description: "This issue or pull request is on hold"
    - name: "status: ready"
      color: "4CAF50"
      description: "This issue or pull request is ready"
    - name: "status: stale"
      color: "55666F"
      description: "This issue or pull request is stale"
    - name: "github_actions"
      color: "000000"
      description: "This issue or pull request is related to GitHub Actions"

# Milestones: define milestones for Issues and Pull Requests
#milestones:
#  - title: milestone-title
#    description: milestone-description
#    # The state of the milestone. Either `open` or `closed`
#    state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
#collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
#teams:
#  - name: core
#    # The permission to grant the team. Can be one of:
#    # * `pull` - can pull, but not push to or administer this repository.
#    # * `push` - can pull and push, but not administer this repository.
#    # * `admin` - can pull, push and administer this repository.
#    # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#    # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#    permission: admin
#  - name: docs
#    permission: push

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        #dismissal_restrictions:
        #  users: []
        #  teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
        contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: 
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: []
        users: []
        teams: []